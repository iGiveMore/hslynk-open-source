<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.servinglynk.hmis.warehouse</groupId>
	<artifactId>hmis-authorization-service</artifactId>
	<packaging>war</packaging>
	<name>hmis-authorization-service</name>
	<description>hmis-authorization-service</description>
	<parent>
			<groupId>com.servinglynk.hmis.warehouse</groupId>
			<artifactId>hslynk-parent</artifactId>
			<version>2.14.20</version>
	</parent>
	<scm>
		<connection>scm:https://github.com/servinglynk/hmis-lynk-open-source.git</connection>
	</scm>
	<properties>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.7.5</org.slf4j-version>
		<log4j-version>1.2.17</log4j-version>
		<java-version>1.8</java-version>
		<thymeleaf.version>2.1.2.RELEASE</thymeleaf.version>

		<hibernate.version>4.2.0.Final</hibernate.version>
		<commons.dbcp.version>1.4</commons.dbcp.version>
		<spring.version>4.3.22.RELEASE</spring.version>
	</properties>

	<dependencies>

		<!-- spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.7</version>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-xml</artifactId>
			<version>2.4.4.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.8.11</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.11</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.8.5</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.8.11</version>
		</dependency>
		<dependency>
			<groupId>com.servinglynk.hmis.warehouse</groupId>
			<artifactId>hmis-base-serialize</artifactId>
			 <version>${parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.servinglynk.hmis.warehouse</groupId>
			<artifactId>hmis-base-service</artifactId>
			 <version>${parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.servinglynk.hmis.warehouse</groupId>
			<artifactId>hmis-core-common</artifactId>
			 <version>${parent.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1201-jdbc41</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
		</dependency>

	</dependencies>
	<build>
	   <resources>
        <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
        </resource>
    </resources>
		<plugins>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
			     <groupId>org.apache.maven.plugins</groupId>
			     <artifactId>maven-war-plugin</artifactId>
			     <version>2.1.1</version>
			     <configuration>
			       <useDefaultManifestFile>true</useDefaultManifestFile>
			         <archive>
			             <manifestEntries>
			                 <version>${project.version}</version>
			                 	     <Project-Name>${project.name}</Project-Name>
				     <Major-Version>${project.version}</Major-Version>
				     <Build-Version>${build.number}</Build-Version>
				     <Build-Time>${maven.build.timestamp}</Build-Time>
				     <Build-Host>${agent.name}</Build-Host>
				     <Build-User>${user.name}</Build-User>
			             </manifestEntries>
			         </archive>
			     </configuration>
			</plugin>
			   <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>unpack-war</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>com.servinglynk.hmis.warehouse</includeGroupIds>
                            <includeArtifactIds>hmis-authorization-service</includeArtifactIds>
                            <outputDirectory>
                                ${project.build.directory}
                                <!-- or: ${project.basedir}/wherever/you/want/it -->
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>buildnumber-maven-plugin</artifactId>
  <version>1.1</version>
  <executions>
    <execution>
      <phase>validate</phase>
      <goals>
        <goal>create</goal>
      </goals>
      <configuration>
        <format>{0,date,yyDHHmm}</format>
        <items>
          <item>timestamp</item>
        </items>
      </configuration>
    </execution>
  </executions>
  <configuration>
    <format>{0,date,yyDHHmm}</format>
    <items>
      <item>timestamp</item>
    </items>
  </configuration>
</plugin>
<!-- war plugin conf to enable filtering for our file -->
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-war-plugin</artifactId>
    <configuration>
        <webResources>
            <resource>
                <directory>src/main/webapp/</directory>
                <includes>
                    <include>version.jsp</include>
                </includes>
                <filtering>true</filtering>
                <targetPath>.</targetPath>
            </resource>
        </webResources>
    </configuration>
</plugin>q
            <!--  
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-dependency-plugin</artifactId>
		        <version>3.1.1</version>
		        <executions>
		          <execution>
		            <id>unpack-dependencies</id>
		            <phase>package</phase>
		            <goals>
		              <goal>unpack-dependencies</goal>
		            </goals>
		            <configuration>
		              <artifactItems>
		                 <artifactItem>
		                   <groupId>com.servinglynk.hmis.warehouse</groupId>
		                   <artifactId>hmis-authorization-service</artifactId>
		                   <version>${parent.version}</version>
		                   <type>war</type>
		                   <overWrite>false</overWrite>
		                    <includes>META-INF/MANIFEST.MF</includes>
		              		<excludes>**/*.properties</excludes>
		             		 <outputDirectory>target/${project.build.finalName}</outputDirectory>
		            		  <overWriteReleases>false</overWriteReleases>
		            		  <overWriteSnapshots>true</overWriteSnapshots>
		                 </artifactItem>
		               </artifactItems>
		            </configuration>
		          </execution>
		        </executions>
      		</plugin>
      		-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

<!-- 			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<url>http://ec2-52-34-4-204.us-west-2.compute.amazonaws.com:8080/manager/text</url>
					<server>TomcatServer</server>
					<path>/hhmis-authorization-service</path>
				</configuration>
			</plugin> -->


		</plugins>
	</build>
<!-- 	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://52.39.104.238:8080/nexus/content/groups/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>http://52.39.104.238:8080/nexus/content/groups/public</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	<distributionManagement>
		<repository>
			<id>deployment</id>
			<name>Internal Releases</name>
			<url>http://52.39.104.238:8080/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>deployment</id>
			<name>Internal Releases</name>
			<url>http://52.39.104.238:8080/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement> -->
</project>
