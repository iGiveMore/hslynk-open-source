package com.servinglynk.hmis.warehouse.core.model;import java.util.ArrayList;import java.util.Date;import java.util.List;import java.util.UUID;import javax.validation.constraints.Pattern;import org.hibernate.validator.constraints.Email;import org.hibernate.validator.constraints.Length;import org.hibernate.validator.constraints.NotBlank;import com.fasterxml.jackson.annotation.JsonProperty;import com.fasterxml.jackson.annotation.JsonRootName;import com.servinglynk.hmis.warehouse.common.Constants;@JsonRootName("account")public class Account extends ClientModel {	private UUID userId;  // Added for global project user map		private String link; //Added for global project user map		private UUID accountId;	@NotBlank(message="User name is required")	private String username;	@NotBlank(message="Email Address is required")	@Email(message="Invalid email format")	private String emailAddress;	@NotBlank(message="Password is required")	@Pattern(regexp=Constants.PASSWORD_REG_EXP,message="The password must contain 8 to 16 characters long, It must contain at least one lowercase character, one uppercase character, one number, and one of the following special characters !@#$*")	@Length(min=8,message="Password should be atleast 8 characters")	private String password;	@NotBlank(message="Confirm is required")	@Length(min=8,message="Confirm Password should be atleast 8 characters")	private String confirmPassword;	@NotBlank(message="First Name is required")	@Length(max=50)	private String firstName;	@Length(max=50)	private String middleName;	@NotBlank(message="Last Name is required")	@Length(max=50)	private String lastName;//	@NotBlank(message="Gender is required")	private int gender;	private String status;	private Date createdAt;	private Date modifiedAt;	private String otp;	private boolean twoFactorAuthentication=false;		private UUID organizationId;		private String verificationToken;		@JsonProperty("projectGroup")	private ProjectGroup projectGroup;		@JsonProperty("role")	private Role role;		@JsonProperty("profile")	private Profile profile;	public String getUsername() {		return username;	}	public void setUsername(String username) {		this.username = username;	}	public String getEmailAddress() {		return emailAddress;	}	public void setEmailAddress(String emailAddress) {		this.emailAddress = emailAddress;	}	public String getPassword() {		return password;	}	public void setPassword(String password) {		this.password = password;	}	public String getFirstName() {		return firstName;	}	public void setFirstName(String firstName) {		this.firstName = firstName;	}	public String getMiddleName() {		return middleName;	}	public void setMiddleName(String middleName) {		this.middleName = middleName;	}	public String getLastName() {		return lastName;	}	public void setLastName(String lastName) {		this.lastName = lastName;	}	public String getStatus() {		return status;	}	public void setStatus(String status) {		this.status = status;	}	public UUID getAccountId() {		return accountId;	}	public void setAccountId(UUID accountId) {		this.accountId = accountId;	}		public Date getCreatedAt() {		return createdAt;	}	public void setCreatedAt(Date createdAt) {		this.createdAt = createdAt;	}	public Date getModifiedAt() {		return modifiedAt;	}	public void setModifiedAt(Date modifiedAt) {		this.modifiedAt = modifiedAt;	}			public int getGender(){		return gender;	}		public void setGender(int gender){		this.gender= gender;	}	public Profile getProfile() {		return profile;	}	public void setProfile(Profile profile) {		this.profile = profile;	}	public UUID getOrganizationId() {		return organizationId;	}	public void setOrganizationId(UUID organizationId) {		this.organizationId = organizationId;	}	public String getVerificationToken() {		return verificationToken;	}	public void setVerificationToken(String verificationToken) {		this.verificationToken = verificationToken;	}	public ProjectGroup getProjectGroup() {		return projectGroup;	}	public void setProjectGroup(ProjectGroup projectGroup) {		this.projectGroup = projectGroup;	}	public Role getRole() {		return role;	}	public void setRole(Role role) {		this.role = role;	}	public String getOtp() {		return otp;	}	public void setOtp(String otp) {		this.otp = otp;	}	public boolean isTwoFactorAuthentication() {		return twoFactorAuthentication;	}	public void setTwoFactorAuthentication(boolean twoFactorAuthentication) {		this.twoFactorAuthentication = twoFactorAuthentication;	}				@JsonProperty(value="roles")	private List<Role> roles=new ArrayList<Role>();	public List<Role> getRoles() {		return roles;	}	public void setRoles(List<Role> roles) {		this.roles = roles;	}		public void addRole(Role role){		this.roles.add(role);	}	public String getConfirmPassword() {		return confirmPassword;	}	public void setConfirmPassword(String confirmPassword) {		this.confirmPassword = confirmPassword;	}	public UUID getUserId() {		return userId;	}	public void setUserId(UUID userId) {		this.userId = userId;	}	}