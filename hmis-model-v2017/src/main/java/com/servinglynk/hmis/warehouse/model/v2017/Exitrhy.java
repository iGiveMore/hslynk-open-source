package com.servinglynk.hmis.warehouse.model.v2017;

import java.io.Serializable;
import java.util.Collections;
import java.util.Map;
import java.util.WeakHashMap;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Type;
import org.hibernate.proxy.HibernateProxy;

import com.servinglynk.hmis.warehouse.enums.EntryRHYcountOfExchangeForSexpEnum;
import com.servinglynk.hmis.warehouse.enums.ExitRHYEarlyExitReasonEnum;
import com.servinglynk.hmis.warehouse.enums.NoYesEnum;
import com.servinglynk.hmis.warehouse.enums.ProjectcompletionstatusProjectcompletionstatusEnum;

/**
 * Object mapping for hibernate-handled table: exitrhy.
 *
 *
 * @author autogenerated
 */


@Entity(name = "exitrhy_v2017")
@Table(name = "exitrhy", catalog = "hmis", schema = "v2017")
public class Exitrhy extends HmisBaseModel implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -4922345514822424647L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, java.util.UUID> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, java.util.UUID>());

	/** hashCode temporary storage. */
	private volatile java.util.UUID hashCode;


	/** Field mapping. */
	private ExitRHYEarlyExitReasonEnum earlyExitReason;
	/** Field mapping. */
	private Exit exitid;
	/** Field mapping. */
	private java.util.UUID id;
	/** Field mapping. */
	private ProjectcompletionstatusProjectcompletionstatusEnum projectCompletionStatus;
	private NoYesEnum exchangeForSex;
	private NoYesEnum exchangeForSexPastThreeMonths;
	private EntryRHYcountOfExchangeForSexpEnum countOfExchangeForSex;  
	private NoYesEnum askedOrForcedToExchangeForSex;
	private NoYesEnum askedOrForcedToExchangeForSexPastThreeMonths; 
	private NoYesEnum workPlaceViolenceThreats;  
	private NoYesEnum workPlacePromiseDifference;
	private NoYesEnum coercedToContinueWork;  
	private NoYesEnum laborExploitPastThreeMonths;
	private NoYesEnum counselingReceived; 
	private NoYesEnum individualCounseling;  
	private NoYesEnum familyCounseling;
	private NoYesEnum groupCounseling;
	private Integer sessionCountAtExit;
	private Integer sessionsInPlan; 
	private NoYesEnum postExitCounselingPlan;  
	private NoYesEnum destinationSafeClient;  
	private NoYesEnum destinationSafeWorker;  
	private NoYesEnum posAdultConnections;
	private NoYesEnum posPeerConnections;  
	private NoYesEnum posCommunityConnections;

	
	
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public Exitrhy() {
		// Default constructor
	}

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public Exitrhy(java.util.UUID id) {
		this.id = id;
	}





	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return Exitrhy.class;
	}


		 /**
		 * Return the value associated with the column: earlyExitReason.
		 * @return A Integer object (this.earlyExitReason)
		 */
		@Type(type = "com.servinglynk.hmis.warehouse.enums.ExitRHYEarlyExitReasonEnumType")
		@Basic( optional = true )
		@Column (name="early_exit_reason")
		public ExitRHYEarlyExitReasonEnum getEarlyExitReason() {
			return this.earlyExitReason;

		}


		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "exchage_for_sex")
		 public NoYesEnum getExchangeForSex() {
			return exchangeForSex;
		}

		public void setExchangeForSex(NoYesEnum exchageForSex) {
			this.exchangeForSex = exchangeForSex;
		}

		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "exchange_for_sex_past_three_months")
		public NoYesEnum getExchangeForSexPastThreeMonths() {
			return exchangeForSexPastThreeMonths;
		}

		public void setExchangeForSexPastThreeMonths(
				NoYesEnum exchangeForSexPastThreeMonths) {
			this.exchangeForSexPastThreeMonths = exchangeForSexPastThreeMonths;
		}
		
		@Type(type = "com.servinglynk.hmis.warehouse.enums.EntryRHYcountOfExchangeForSexpEnumType")
		@Basic( optional = true )
		@Column( name = "count_of_exchange_for_sex")
		public EntryRHYcountOfExchangeForSexpEnum getCountOfExchangeForSex() {
			return countOfExchangeForSex;
		}

		public void setCountOfExchangeForSex(EntryRHYcountOfExchangeForSexpEnum countOfExchangeForSex) {
			this.countOfExchangeForSex = countOfExchangeForSex;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "asked_or_forced_to_exchange_for_sex")
		public NoYesEnum getAskedOrForcedToExchangeForSex() {
			return askedOrForcedToExchangeForSex;
		}

		public void setAskedOrForcedToExchangeForSex(
				NoYesEnum askedOrForcedToExchangeForSex) {
			this.askedOrForcedToExchangeForSex = askedOrForcedToExchangeForSex;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "asked_or_forced_to_exchange_for_sex_past_three_months")
		public NoYesEnum getAskedOrForcedToExchangeForSexPastThreeMonths() {
			return askedOrForcedToExchangeForSexPastThreeMonths;
		}

		public void setAskedOrForcedToExchangeForSexPastThreeMonths(
				NoYesEnum askedOrForcedToExchangeForSexPastThreeMonths) {
			this.askedOrForcedToExchangeForSexPastThreeMonths = askedOrForcedToExchangeForSexPastThreeMonths;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "work_place_violence_threats")
		public NoYesEnum getWorkPlaceViolenceThreats() {
			return workPlaceViolenceThreats;
		}

		public void setWorkPlaceViolenceThreats(NoYesEnum workPlaceViolenceThreats) {
			this.workPlaceViolenceThreats = workPlaceViolenceThreats;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "work_place_promise_difference")
		public NoYesEnum getWorkPlacePromiseDifference() {
			return workPlacePromiseDifference;
		}

		public void setWorkPlacePromiseDifference(NoYesEnum workPlacePromiseDifference) {
			this.workPlacePromiseDifference = workPlacePromiseDifference;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "coerced_to_continue_work")
		public NoYesEnum getCoercedToContinueWork() {
			return coercedToContinueWork;
		}

		public void setCoercedToContinueWork(NoYesEnum coercedToContinueWork) {
			this.coercedToContinueWork = coercedToContinueWork;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "labor_exploit_past_three_months")
		public NoYesEnum getLaborExploitPastThreeMonths() {
			return laborExploitPastThreeMonths;
		}

		public void setLaborExploitPastThreeMonths(NoYesEnum laborExploitPastThreeMonths) {
			this.laborExploitPastThreeMonths = laborExploitPastThreeMonths;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "counseling_received")
		public NoYesEnum getCounselingReceived() {
			return counselingReceived;
		}

		public void setCounselingReceived(NoYesEnum counselingReceived) {
			this.counselingReceived = counselingReceived;
		}

		@Basic( optional = true )
		@Column( name = "session_count_at_exit")
		public Integer getSessionCountAtExit() {
			return sessionCountAtExit;
		}

		public void setSessionCountAtExit(Integer sessionCountAtExit) {
			this.sessionCountAtExit = sessionCountAtExit;
		}
		
		
		@Basic( optional = true )
		@Column( name = "sessions_in_plan")
		public Integer getSessionsInPlan() {
			return sessionsInPlan;
		}

		public void setSessionsInPlan(Integer sessionsInPlan) {
			this.sessionsInPlan = sessionsInPlan;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "post_exit_counseling_plan")
		public NoYesEnum getPostExitCounselingPlan() {
			return postExitCounselingPlan;
		}

		public void setPostExitCounselingPlan(NoYesEnum postExitCounselingPlan) {
			this.postExitCounselingPlan = postExitCounselingPlan;
		}

		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "destination_safe_client")
		public NoYesEnum getDestinationSafeClient() {
			return destinationSafeClient;
		}

		public void setDestinationSafeClient(NoYesEnum destinationSafeClient) {
			this.destinationSafeClient = destinationSafeClient;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "destination_safe_worker")
		public NoYesEnum getDestinationSafeWorker() {
			return destinationSafeWorker;
		}

		public void setDestinationSafeWorker(NoYesEnum destinationSafeWorker) {
			this.destinationSafeWorker = destinationSafeWorker;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "pos_adult_connections")
		public NoYesEnum getPosAdultConnections() {
			return posAdultConnections;
		}

		public void setPosAdultConnections(NoYesEnum posAdultConnections) {
			this.posAdultConnections = posAdultConnections;
		}
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "pos_peer_connections")
		public NoYesEnum getPosPeerConnections() {
			return posPeerConnections;
		}

		public void setPosPeerConnections(NoYesEnum posPeerConnections) {
			this.posPeerConnections = posPeerConnections;
		}

		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "pos_community_connections")
		public NoYesEnum getPosCommunityConnections() {
			return posCommunityConnections;
		}

		public void setPosCommunityConnections(NoYesEnum posCommunityConnections) {
			this.posCommunityConnections = posCommunityConnections;
		}

		
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "individual_counseling")
		public NoYesEnum getIndividualCounseling() {
			return individualCounseling;
		}

		public void setIndividualCounseling(NoYesEnum individualCounseling) {
			this.individualCounseling = individualCounseling;
		}
		
		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "family_counseling")
		public NoYesEnum getFamilyCounseling() {
			return familyCounseling;
		}

		public void setFamilyCounseling(NoYesEnum familyCounseling) {
			this.familyCounseling = familyCounseling;
		}

		@Type(type = "com.servinglynk.hmis.warehouse.enums.NoYesEnumType")
		@Basic( optional = true )
		@Column( name = "group_counseling")
		public NoYesEnum getGroupCounseling() {
			return groupCounseling;
		}

		public void setGroupCounseling(NoYesEnum groupCounseling) {
			this.groupCounseling = groupCounseling;
		}

		/**
		 * Set the value related to the column: earlyExitReason.
		 * @param earlyExitReason the earlyExitReason value you wish to set
		 */
		public void setEarlyExitReason(final ExitRHYEarlyExitReasonEnum earlyExitReason) {
			this.earlyExitReason = earlyExitReason;
		}

		 /**
		 * Return the value associated with the column: exitid.
		 * @return A Exit object (this.exitid)
		 */
		@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
		@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
		@Basic( optional = true )
		@JoinColumn(name = "exitid", nullable = true )
		public Exit getExitid() {
			return this.exitid;

		}



		 /**
		 * Set the value related to the column: exitid.
		 * @param exitid the exitid value you wish to set
		 */
		public void setExitid(final Exit exitid) {
			this.exitid = exitid;
		}


		 /**
		 * Return the value associated with the column: id.
		 * @return A java.util.UUID object (this.id)
		 */
		@Id
		@Basic( optional = false )
		@Column( name = "id", nullable = false  ) @org.hibernate.annotations.Type(type="org.hibernate.type.PostgresUUIDType")
		public java.util.UUID getId() {
			return this.id;

		}

		 /**
		 * Set the value related to the column: id.
		 * @param id the id value you wish to set
		 */
		public void setId(final java.util.UUID id) {
			// If we've just been persisted and hashCode has been
			// returned then make sure other entities with this
			// ID return the already returned hash code
			if ( (this.id == null ) &&
					(id != null) &&
					(this.hashCode != null) ) {
			SAVED_HASHES.put( id, this.hashCode );
			}
			this.id = id;
		}


		 /**
		 * Return the value associated with the column: projectCompletionStatus.
		 * @return A Integer object (this.projectCompletionStatus)
		 */
		@Type(type = "com.servinglynk.hmis.warehouse.enums.ProjectcompletionstatusProjectcompletionstatusEnumType")
		@Basic( optional = true )
		@Column(name="project_completion_status")
		public ProjectcompletionstatusProjectcompletionstatusEnum getProjectCompletionStatus() {
			return this.projectCompletionStatus;

		}



		 /**
		 * Set the value related to the column: projectCompletionStatus.
		 * @param projectCompletionStatus the projectCompletionStatus value you wish to set
		 */
		public void setProjectCompletionStatus(final ProjectcompletionstatusProjectcompletionstatusEnum projectCompletionStatus) {
			this.projectCompletionStatus = projectCompletionStatus;
		}

		/** Field mapping. */
		protected Export export;
		 /**
		 * Return the value associated with the column: export.
		 * @return A Export object (this.export)
		 */
		@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
		@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
		@Basic( optional = true )
		@JoinColumn(name = "export_id", nullable = true )
		public Export getExport() {
			return this.export;

		}



		 /**
		 * Set the value related to the column: export.
		 * @param export the export value you wish to set
		 */
		public void setExport(final Export export) {
			this.export = export;
		}
		
	/**
	    * Deep copy.
		* @return cloned object
		* @throws CloneNotSupportedException on error
	    */
	    @Override
	    public Exitrhy clone() throws CloneNotSupportedException {

        final Exitrhy copy = (Exitrhy)super.clone();

		copy.setDateCreated(this.getDateCreated());
		copy.setDateCreatedFromSource(this.getDateCreatedFromSource());
		copy.setDateUpdated(this.getDateUpdated());
		copy.setDateUpdatedFromSource(this.getDateUpdatedFromSource());
		copy.setDeleted(this.isDeleted());
		copy.setEarlyExitReason(this.getEarlyExitReason());
		copy.setExitid(this.getExitid());
		copy.setExport(this.getExport());
		copy.setId(this.getId());
		copy.setParentId(this.getParentId());
		copy.setProjectCompletionStatus(this.getProjectCompletionStatus());
		copy.setProjectGroupCode(this.getProjectGroupCode());
		copy.setSync(this.isSync());
		copy.setUserId(this.getUserId());
		copy.setVersion(this.getVersion());
		return copy;
	}



	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();

		sb.append("dateCreated: " + this.getDateCreated() + ", ");
		sb.append("dateCreatedFromSource: " + this.getDateCreatedFromSource() + ", ");
		sb.append("dateUpdated: " + this.getDateUpdated() + ", ");
		sb.append("dateUpdatedFromSource: " + this.getDateUpdatedFromSource() + ", ");
		sb.append("deleted: " + this.isDeleted() + ", ");
		sb.append("earlyExitReason: " + this.getEarlyExitReason() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("parentId: " + this.getParentId() + ", ");
		sb.append("projectCompletionStatus: " + this.getProjectCompletionStatus() + ", ");
		sb.append("projectGroupCode: " + this.getProjectGroupCode() + ", ");
		sb.append("sync: " + this.isSync() + ", ");
		sb.append("userId: " + this.getUserId() + ", ");
		sb.append("version: " + this.getVersion() + ", ");
		return sb.toString();
	}


	/** Equals implementation.
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;

		if ( this == aThat ) {
			 return true;
		}


		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation();
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}

		final Exitrhy that;
		try {
			that = (Exitrhy) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}


		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getDateCreated() == null) && (that.getDateCreated() == null)) || (getDateCreated() != null && getDateCreated().equals(that.getDateCreated())));
		result = result && (((getDateCreatedFromSource() == null) && (that.getDateCreatedFromSource() == null)) || (getDateCreatedFromSource() != null && getDateCreatedFromSource().equals(that.getDateCreatedFromSource())));
		result = result && (((getDateUpdated() == null) && (that.getDateUpdated() == null)) || (getDateUpdated() != null && getDateUpdated().equals(that.getDateUpdated())));
		result = result && (((getDateUpdatedFromSource() == null) && (that.getDateUpdatedFromSource() == null)) || (getDateUpdatedFromSource() != null && getDateUpdatedFromSource().equals(that.getDateUpdatedFromSource())));
		result = result && (((getEarlyExitReason() == null) && (that.getEarlyExitReason() == null)) || (getEarlyExitReason() != null && getEarlyExitReason().equals(that.getEarlyExitReason())));
		result = result && (((getExitid() == null) && (that.getExitid() == null)) || (getExitid() != null && getExitid().getId().equals(that.getExitid().getId())));
		result = result && (((getExport() == null) && (that.getExport() == null)) || (getExport() != null && getExport().getId().equals(that.getExport().getId())));
		result = result && (((getParentId() == null) && (that.getParentId() == null)) || (getParentId() != null && getParentId().equals(that.getParentId())));
		result = result && (((getProjectCompletionStatus() == null) && (that.getProjectCompletionStatus() == null)) || (getProjectCompletionStatus() != null && getProjectCompletionStatus().equals(that.getProjectCompletionStatus())));
		result = result && (((getProjectGroupCode() == null) && (that.getProjectGroupCode() == null)) || (getProjectGroupCode() != null && getProjectGroupCode().equals(that.getProjectGroupCode())));
		result = result && (((getUserId() == null) && (that.getUserId() == null)) || (getUserId() != null && getUserId().equals(that.getUserId())));
		result = result && (((getVersion() == null) && (that.getVersion() == null)) || (getVersion() != null && getVersion().equals(that.getVersion())));
		return result;
	}
}