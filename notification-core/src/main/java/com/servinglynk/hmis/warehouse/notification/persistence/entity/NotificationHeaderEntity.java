package com.servinglynk.hmis.warehouse.notification.persistence.entity;import java.util.Set;import javax.persistence.CascadeType;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.Id;import javax.persistence.OneToMany;import javax.persistence.SequenceGenerator;import javax.persistence.Table;@SuppressWarnings("serial")@Entity@Table(name = "HMIS_NOTIFICATION_HEADER" )public class NotificationHeaderEntity extends ParentEntity {	private Long id;		@Id	@SequenceGenerator(name="pk_sequence",sequenceName="hmis_notification_header_id_seq", allocationSize=1)	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="pk_sequence")	public Long getId() {		return id;	}	private String statusMessage;	private String status;	private String originatorId;	private String originatorType;	private String sender;	private String senderFriendly;	private String notificationData;	@OneToMany(mappedBy = "notificationJob")	private Set<NotificationLineEntity> notifications;	private String externalId;	protected void setId(Long id) {		this.id = id;	}		@Column(name = "status_message")	public String getStatusMessage() {		return statusMessage;	}	public void setStatusMessage(String statusMessage) {		this.statusMessage = statusMessage;	}		@Column(name = "status")	public String getStatus() {		return status;	}	public void setStatus(String status) {		this.status = status;	}		@Column(name = "originator_id")	public String getOriginatorId() {		return originatorId;	}	public void setOriginatorId(String originatorId) {		this.originatorId = originatorId;	}		@Column(name = "originator_type")	public String getOriginatorType() {		return originatorType;	}	public void setOriginatorType(String originatorType) {		this.originatorType = originatorType;	}		@Column(name = "notification_data")	public String getNotificationData() {		return notificationData;	}	public void setNotificationData(String notificationData) {		this.notificationData = notificationData;	}	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "notificationHeaderEntity")	public Set<NotificationLineEntity> getNotifications() {		return notifications;	}	public void setNotifications(Set<NotificationLineEntity> notifications) {		this.notifications = notifications;	}	@Column(name = "external_id")	public String getExternalId() {		return externalId;	}	public void setExternalId(String externalId) {		this.externalId = externalId;	}		@Column(name = "sender")	public String getSender() {		return sender;	}	public void setSender(String sender) {		this.sender = sender;	}	@Column(name = "sender_friendly")	public String getSenderFriendly() {		return senderFriendly;	}	public void setSenderFriendly(String senderFriendly) {		this.senderFriendly = senderFriendly;	}	}