package com.servinglynk.hmis.warehouse.report.persistence.entity;import static javax.persistence.GenerationType.IDENTITY;import java.util.HashSet;import java.util.Set;import javax.persistence.CascadeType;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.Id;import javax.persistence.OneToMany;import javax.persistence.SequenceGenerator;import javax.persistence.Table;@SuppressWarnings("serial")@Entity@Table(name = "HMIS_REPORT_HEADER" )public class ReportHeaderEntity extends ParentEntity {	private Long id;		@Id	@SequenceGenerator(name="pk_sequence",sequenceName="hmis_report_header_id_seq", allocationSize=1)	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="pk_sequence")	public Long getId() {		return id;	}	private String externalId;	private String friendlyName;	private String reportTemplate;	private String reportNamePrefix;	private String reportLocation;	private int version;	private String name;	private String tempLocation;	private String outputType;	private String macroTemplate;		private Set<ReportLineEntity> reportLines = new HashSet<ReportLineEntity>(0);	private Set<ReportRecipientEntity> reportReceipients = new HashSet<ReportRecipientEntity>(0);	public void setId(Long id) {		this.id = id;	}		@Column(name = "external_id")	public String getExternalId() {		return externalId;	}	public void setExternalId(String externalId) {		this.externalId = externalId;	}	@Column(name = "friendly_name")	public String getFriendlyName() {		return friendlyName;	}	public void setFriendlyName(String friendlyName) {		this.friendlyName = friendlyName;	}	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "reportHeaderEntity")	public Set<ReportLineEntity> getReportLines() {		return reportLines;	}	public void setReportLines(Set<ReportLineEntity> reportLines) {		this.reportLines = reportLines;	}			@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "reportHeaderEntity")	public Set<ReportRecipientEntity> getReportReceipients() {		return reportReceipients;	}	public void setReportReceipients(Set<ReportRecipientEntity> reportReceipients) {		this.reportReceipients = reportReceipients;	}	@Column(name = "version")	public int getVersion() {		return version;	}	public void setVersion(int version) {		this.version = version;	}	@Column(name = "name")	public String getName() {		return name;	}	public void setName(String name) {		this.name = name;	}	@Column(name="report_template")	public String getReportTemplate() {		return reportTemplate;	}	public void setReportTemplate(String reportTemplate) {		this.reportTemplate = reportTemplate;	}	@Column(name="report_name_prefix")	public String getReportNamePrefix() {		return reportNamePrefix;	}	public void setReportNamePrefix(String reportNamePrefix) {		this.reportNamePrefix = reportNamePrefix;	}	@Column(name="report_location")	public String getReportLocation() {		return reportLocation;	}	public void setReportLocation(String reportLocation) {		this.reportLocation = reportLocation;	}		@Column(name="temp_location")	public String getTempLocation() {		return tempLocation;	}	public void setTempLocation(String tempLocation) {		this.tempLocation = tempLocation;	}	@Column(name="output_type")	public String getOutputType() {		return outputType;	}	public void setOutputType(String outputType) {		this.outputType = outputType;	}	@Column(name="macro_template")	public String getMacroTemplate() {		return macroTemplate;	}	public void setMacroTemplate(String macroTemplate) {		this.macroTemplate = macroTemplate;	}			}